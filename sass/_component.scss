// ////////////////
// LOGO
.logo {
    height: 3.25rem;
    margin-left: 3rem;
}


// ********** SEARCH **************
.search {
    flex: 0 0 40%;
    // you can have nested flexbox 
    display: flex;
    align-items: center;
    justify-content: center;

    // font related properties are not inherited in input elements
    &-input {
        font-family: inherit;
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2;
        margin-right: -3.5rem;

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }

    &-input:focus+&-button {
        background-color: var(--color-grey-light-3);
    }

    &-button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;

        }

        &:active {
            transform: translateY(2px);
        }
    }

    &-icon {
        height: 2rem;
        width: 2rem;
        // to change color of svg icon
        fill: var(--color-grey-dark-3);
    }
}




// ********** USER NAVIGATION *********
.user-nav {
    align-self: stretch;
    display: flex;
    align-items: center;

    &>* {
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
        display: flex;
        align-items: center;
    }

    &>*:hover {
        background-color: var(--color-grey-light-2);
    }

    &-icon-box {
        position: relative;
    }

    &-icon {
        fill: var(--color-grey-dark-2);
        height: 2.25rem;
        width: 2.25rem;
        // postion reltive does not work well with svg elements
    }

    &-notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;
        // flexbox works with text elements also
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &-user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }

}

// ******** SIDE NAVIGATION **************
.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;


    &-item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;
        }

    }

    &-item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        // in transition you can have different settings for different properties using comma seperated values for each property
        transition: transform .2s,
            width .4s cubic-bezier(1, 0, 0, 1) .2s,
            background-color .1s;
    }

    &-item:hover::before,
    &-item-active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &-item:active::before {
        background-color: var(--color-primary-light);
    }

    &-link:link,
    &-link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        display: flex;
        align-items: center;
        position: relative;
        // z-index only works if we have a position specified
        z-index: 10;


    }

    &-icon {
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        // fill: var(--color-grey-light-1);
        // currentColor --> color of the current element or parent element
        fill: currentColor;

    }

}


//********* LEGAL TEXT ********************
.legal {
    font-size: 1.2rem;
    text-align: center;
    padding: 2.5rem;
    color: var(--color-grey-light-4);
}


// GALLERY
.gallery {
    display: flex;

    &-photo {
        width: 100%;
        display: block;
    }
}

// HOTEL OVERVIEW
.overview {
    display: flex;
    align-items: center;
    border-bottom: var(--line);

    &-heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;
    }

    &-stars {
        // flex: 1;
        // important trick : element only occupies the space which it needs, margin is automatically calculated. to create space between which we can't create using justify-content: ;
        // justify-content: center;
        margin-right: auto;
        display: flex;

    }

    &-icon-star,
    &-icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &-location {
        font-size: 1.2rem;
        display: flex;
        vertical-align: center;
    }

    &-icon-location {
        margin-right: .5rem;

    }

    &-rating {
        background-color: var(--color-primary);
        margin-left: 3rem;
        color: #fff;
        // to make it occupy all the vertical space
        align-self: stretch;
        padding: 0 2.25rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    &-rating-average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;
    }

    &-rating-count {
        font-size: .8rem;
        text-transform: uppercase;
    }
}


// INLINE BUTTON
.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor;
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;


    & span {
        margin-left: 3px;
        transition: margin-left .2s;
    }

    &:hover {
        color: var(--color-grey-dark-1);

        span {
            margin-left: 8px;
        }
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }

}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0, 0, 0, .25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}


// PARAGRAPHS
.paragraph:not(:last-of-type) {
    margin-bottom: 2rem;
}


//  LIST
.list {
    list-style: none;
    margin: 3rem 0;
    padding: 3rem 0;
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex;

    flex-wrap: wrap;

    &-item {
        flex: 0 0 50%;
        margin-bottom: .7rem;
    }

    // using svg from css 
    // with this approach you can't change icon color
    // we have to use mask
    &-item::before {
        content: '';
        display: inline-block;
        height: 2rem;
        width: 2rem;
        margin-right: .7rem;

        // for older browser
        // background-image: url(../img/chevron-thin-right.svg);
        // background-size: cover;

        // newer browsers - masks
        background-color: var(--color-primary);
        -webkit-mask-image: url(../img/chevron-thin-right.svg);
        -webkit-mask-size: cover;
        mask-image: url(../img/chevron-thin-right.svg);
        mask-size: cover;
    }

}


// BUTTON INLINE


// RECOMMEND
.recommend {
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);

    display: flex;
    align-items: center;

    &-count {
        margin-right: auto;
    }

    &-friends {}

    &-photo {
        // content-box is default but we have set default as border box in css reset
        box-sizing: content-box;
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid #fff;

        &:not(:last-child) {
            margin-right: -1.5rem;
        }
    }
}


// REVIEWS
.review {
    background-color: #fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    position: relative;
    overflow: hidden;

    &-text {
        margin-bottom: 2rem;
        z-index: 10;
        position: relative;
    }

    &-user {
        display: flex;
        align-items: center;
    }

    &-photo {
        height: 4.5rem;
        width: 4, 5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }

    &-user-box {
        margin-right: auto;
    }

    &-user-name {
        font-weight: 600;
        font-size: 1.1rem;
        text-transform: uppercase;
        margin-bottom: .4rem;
    }

    &-user-date {
        font-size: 1rem;
        color: var(--color-grey-dark-3);
    }

    &-rating {
        color: var(--color-primary);
        font-size: 2.2rem;
        font-weight: 300;
    }


    &::before {
        // for quotation marks on reviews
        content: "\201C";
        position: absolute;
        top: -2.75rem;
        left: -1rem;
        color: var(--color-grey-light-2);
        font-family: sans-serif;
        line-height: 1;
        font-size: 20rem;
        z-index: 1;
    }
}


// CTA SECTION 
.cta {
    padding: 3.5rem 0;
    text-align: center;

    &-book-now {
        font-size: 2rem;
        text-transform: uppercase;
        font-weight: 300;
        margin-bottom: 2.5rem;
    }
}

.btn {
    font-size: 1.5rem;
    border: none;
    font-weight: 300;
    text-transform: uppercase;
    border-radius: 100px;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    color: #fff;
    position: relative;
    // to hide the invisible part
    overflow: hidden;
    cursor: pointer;


    &>* {
        display: inline-block;
        height: 100%;
        width: 100%;
        transition: all .2s;
    }

    &-visible {
        padding: 2rem 7.5rem;
    }

    &-invisible {
        position: absolute;
        padding: 2rem;
        left: 0;
        top: -100%;
    }

    &:hover {
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
    }

    &:hover &-visible {
        transform: translateY(100%);
    }

    &:hover &-invisible {
        top: 0;
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}